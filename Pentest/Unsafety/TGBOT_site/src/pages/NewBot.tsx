import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Bot, Plus } from 'lucide-react';

interface NewBotData {
  title: string;
  description: string;
  price: number;
  features: string[];
}

function NewBot() {
  const navigate = useNavigate();
  const [botData, setBotData] = useState<NewBotData>({
    title: '',
    description: '',
    price: 0,
    features: ['']
  });

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    navigate('/dashboard');
  };

  const handleFeatureChange = (index: number, value: string) => {
    const newFeatures = [...botData.features];
    newFeatures[index] = value;
    setBotData({ ...botData, features: newFeatures });
  };

  const addFeature = () => {
    setBotData({ ...botData, features: [...botData.features, ''] });
  };

  const removeFeature = (index: number) => {
    const newFeatures = botData.features.filter((_, i) => i !== index);
    setBotData({ ...botData, features: newFeatures });
  };

  return (
    <div className="min-h-screen bg-black text-white p-8">
      <div className="max-w-2xl mx-auto">
        <div className="flex items-center space-x-4 mb-8">
          <Bot className="w-8 h-8 text-[#ff9900]" />
          <h1 className="text-3xl font-bold">Создать нового бота</h1>
        </div>

        <form onSubmit={handleSubmit} className="space-y-6">
          <div>
            <label className="block text-gray-300 mb-2">Название</label>
            <input
              type="text"
              value={botData.title}
              onChange={(e) => setBotData({ ...botData, title: e.target.value })}
              className="w-full px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-[#ff9900] text-white"
              required
            />
          </div>

          <div>
            <label className="block text-gray-300 mb-2">Описание</label>
            <textarea
              value={botData.description}
              onChange={(e) => setBotData({ ...botData, description: e.target.value })}
              className="w-full px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-[#ff9900] text-white h-32"
              required
            />
          </div>

          <div>
            <label className="block text-gray-300 mb-2">Цена ($)</label>
            <input
              type="number"
              value={botData.price}
              onChange={(e) => setBotData({ ...botData, price: parseFloat(e.target.value) })}
              className="w-full px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-[#ff9900] text-white"
              step="0.01"
              min="0"
              required
            />
          </div>

          <div>
            <label className="block text-gray-300 mb-2">Особенности</label>
            <div className="space-y-2">
              {botData.features.map((feature, index) => (
                <div key={index} className="flex space-x-2">
                  <input
                    type="text"
                    value={feature}
                    onChange={(e) => handleFeatureChange(index, e.target.value)}
                    className="flex-1 px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-[#ff9900] text-white"
                    placeholder="Введите описание функции"
                  />
                  <button
                    type="button"
                    onClick={() => removeFeature(index)}
                    className="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700"
                  >
                    Удалить
                  </button>
                </div>
              ))}
              <button
                type="button"
                onClick={addFeature}
                className="w-full px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg hover:border-[#ff9900] text-gray-300"
              >
                + Добавить Особенность
              </button>
            </div>
          </div>

          <button
            type="submit"
            className="w-full bg-[#ff9900] text-black py-3 rounded-lg font-semibold hover:bg-[#cc7a00] transition-colors flex items-center justify-center space-x-2"
          >
            <Plus className="w-5 h-5" />
            <span>Создать нового бота</span>
          </button>
        </form>
      </div>
    </div>
  );
}

export default NewBot;