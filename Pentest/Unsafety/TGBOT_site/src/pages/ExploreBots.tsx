import React, { useState } from 'react';
import { Bot, Search, ShoppingCart, Star } from 'lucide-react';

interface Bot {
  id: string;
  title: string;
  description: string;
  price: number;
  features: string[];
  rating: number;
  creator: string;
}

function ExploreBots() {
  const [searchTerm, setSearchTerm] = useState('');
  const [priceFilter, setPriceFilter] = useState('all');
  const bots: Bot[] = [
    {
      id: '1',
      title: 'Бот поддержки Pro',
      description: 'Автоматизированный бот поддержки клиентов с возможностями искусственного интеллекта.',
      price: 99.99,
      features: ['24/7 Поддержка', 'Многоязычный', 'Даже боты бывают не безопасны'],
      rating: 4.5,
      creator: '@co11apsz Inc'
    },
    {
      id: '2',
      title: 'Ассистент по маркетингу',
      description: 'Улучшайте свои маркетинговые кампании с помощью автоматизированным публикациям и аналитике.',
      price: 149.99,
      features: ['Запланированные публикации', 'Аналитическая панель мониторинга', 'Отслеживание кампаний'],
      rating: 4.8,
      creator: '@MrNansy'
    },
    {
      id: '3',
      title: 'Менеджер мероприятий',
      description: 'Упростить организацию мероприятий и управление участниками.',
      price: 79.99,
      features: ['Планирование мероприятий', 'Отслеживание участников', 'Автоматизированные напоминания'],
      rating: 4.2,
      creator: '@co11apsz Inc & @MrNansy'
    }
  ];

  const filteredBots = bots.filter(bot => {
    const matchesSearch = bot.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         bot.description.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesPrice = priceFilter === 'all' ||
                        (priceFilter === 'under50' && bot.price < 50) ||
                        (priceFilter === '50to100' && bot.price >= 50 && bot.price <= 100) ||
                        (priceFilter === 'over100' && bot.price > 100);
    return matchesSearch && matchesPrice;
  });

  return (
    <div className="min-h-screen bg-black text-white p-8">
      <div className="container mx-auto">
        <h1 className="text-4xl font-bold mb-8">Выберите бота</h1>
        
        <div className="mb-8 space-y-4 md:space-y-0 md:flex md:space-x-4">
          <div className="relative flex-grow">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
            <input
              type="text"
              placeholder="Поиск..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="w-full pl-10 pr-4 py-2 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-[#ff9900] text-white"
            />
          </div>
          <select
            value={priceFilter}
            onChange={(e) => setPriceFilter(e.target.value)}
            className="w-full md:w-48 px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-[#ff9900] text-white"
          >
            <option value="all">Все цены</option>
            <option value="under50">Менее $50</option>
            <option value="50to100">$50 - $100</option>
            <option value="over100">Более $100</option>
          </select>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredBots.map((bot) => (
            <div key={bot.id} className="border border-[#ff9900] rounded-lg p-6 hover:bg-gray-900 transition-colors">
              <div className="flex items-center justify-between mb-4">
                <div className="flex items-center space-x-3">
                  <Bot className="w-8 h-8 text-[#ff9900]" />
                  <h3 className="text-xl font-semibold">{bot.title}</h3>
                </div>
                <div className="flex items-center space-x-1">
                  <Star className="w-5 h-5 text-[#ff9900] fill-current" />
                  <span>{bot.rating}</span>
                </div>
              </div>
              <p className="text-gray-400 mb-4">{bot.description}</p>
              <div className="mb-4">
                <h4 className="text-sm font-semibold text-[#ff9900] mb-2">Особенности:</h4>
                <ul className="list-disc list-inside text-gray-300">
                  {bot.features.map((feature, index) => (
                    <li key={index}>{feature}</li>
                  ))}
                </ul>
              </div>
              <div className="flex items-center justify-between mt-4">
                <div>
                  <p className="text-sm text-gray-400">Сделано</p>
                  <p className="text-[#ff9900]">{bot.creator}</p>
                </div>
                <button className="flex items-center space-x-2 bg-[#ff9900] text-black px-4 py-2 rounded-lg hover:bg-[#cc7a00] transition-colors">
                  <ShoppingCart className="w-5 h-5" />
                  <span>${bot.price.toFixed(2)}</span>
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}

export default ExploreBots;